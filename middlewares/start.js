const {Composer, Extra} = require('telegraf')

const Results = require('../models/results')

const {
  pluralizeIndex,
} = require('../core/utils')

const composer = new Composer()
composer.start((ctx) => {
  return ctx.telegram.sendAnimation(ctx.from.id, 'CgACAgIAAxkDAAOeXwiE8peJsswPcOGc5s8LttMyoqIAAu0GAALrbUlIIccHqQNOXy0aBA', {
    caption: `–Ø —Ä–∏—Å—É—é –∫–∞—Ä—Ç–∏–Ω–æ—á–∫–∏ —Ä–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω—ã–º–∏ –¥—É–≥–∞–º–∏. 

Inspired by openprocessing.org/sketch/624879
–ü–µ—Ä–µ–ø–∏—Å–∞–Ω–æ –Ω–∞ JavaScript by @Loskir
<a href="https://github.com/Loskir/ArcDrawerBot">–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ –±–æ—Ç–∞</a>
–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Å—è –Ω–∞ –º–æ–π –∫–∞–Ω–∞–ª: @Loskirs

–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–∞—Ä—Ç–∏–Ω–∫—É (–∫–∞—Ä—Ç–∏–Ω–∫–æ–π, –Ω–µ —Ñ–∞–π–ª–æ–º)

–ß—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏, –∑–∞–π–¥–∏ –≤ /custom
–ù–∞–ø—Ä–∏–º–µ—Ä, —Ç–∞–º –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å–µ–±–µ –Ω–æ–≤—É—é <a href="https://t.me/betainfo/195">–≤–∏–¥–µ–æ–∞–≤–∞—Ç–∞—Ä–∫—É</a> üòè`,
    parse_mode: 'HTML',
    disable_web_page_preview: true,
  })
})

composer.command('queue', async (ctx) => {
  const queue = [
    ...await Results.find({status: 0}).sort({created_at: 1}),
  ]
  let indexes = []
  queue.forEach((result, i) => {
    if (result.user_id === ctx.from.id) {
      indexes.push(i)
    }
  })

  const word = ['–∫–∞—Ä—Ç–∏–Ω–∫–∞', '–∫–∞—Ä—Ç–∏–Ω–∫–∏', '–∫–∞—Ä—Ç–∏–Ω–æ–∫'][pluralizeIndex(queue.length)]

  return ctx.reply(
    `–í—Å–µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥–∏ ${queue.length} ${word}

–¢–≤–æ–∏ –∑–∞—è–≤–∫–∏: ${indexes.length > 0 ? indexes.map((v) => v + 1).map((v) => `${v}-—è`).join(', ') : '–ø—É—Å—Ç–æ'}`,
    Extra.HTML()
  )
})

module.exports = composer
