const {Markup, Extra} = require('telegraf')
const Scene = require('telegraf/scenes/base')

const Results = require('../models/results')

const {
  catchNotModified,
} = require('../core/utils')

const {
  checkPendingByThisUser,
  getReplyTextByQueueLength,
} = require('../functions/telegram')

const modes = new Map()
  .set('default', '–û–±—ã—á–Ω—ã–π')
  .set('avatar', '–ù–∞ –∞–≤–∞—Ç–∞—Ä–∫—É')

const colors = new Map()
  .set('white', '–±–µ–ª—ã–π')
  .set('black', '—á—ë—Ä–Ω—ã–π')

const getKeyboard = (options) => {
  return Markup.inlineKeyboard([
    [Markup.callbackButton(`–†–µ–∂–∏–º: ${modes.get(options.mode)}`, 'change_mode')],
    [Markup.callbackButton(`–¶–≤–µ—Ç —Ñ–æ–Ω–∞: ${colors.get(options.bgColor)}`, 'change_bgcolor')],
    [Markup.callbackButton('‚úÖ –ì–æ—Ç–æ–≤–æ', 'done')]
  ])
}

const scene = new Scene('custom')
scene.enter((ctx) => {
  ctx.scene.state.options = {
    mode: 'default',
    bgColor: 'white'
  }
  return ctx.reply(`–ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏.

üîπ –†–µ–∂–∏–º
–û–±—ã—á–Ω—ã–π ‚Äî 1000 –ø–∏–∫—Å–µ–ª–µ–π, 20 —Å–µ–∫—É–Ω–¥
–ù–∞ –∞–≤–∞—Ç–∞—Ä–∫—É ‚Äî 800√ó800 –ø–∏–∫—Å–µ–ª–µ–π, 10 —Å–µ–∫—É–Ω–¥ (<a href="https://t.me/betainfo/195">–ø–æ–¥—Ä–æ–±–Ω–µ–µ</a>)
üîπ –¶–≤–µ—Ç —Ñ–æ–Ω–∞ ‚Äî –±–µ–ª—ã–π/—á—ë—Ä–Ω—ã–π`, Extra.HTML().markup(getKeyboard(ctx.scene.state.options)).webPreview(false))
})

scene.action('change_mode', (ctx) => {
  ctx.answerCbQuery()
  ctx.scene.state.options.mode = ctx.scene.state.options.mode === 'default' ? 'avatar' : 'default'
  return ctx.editMessageReplyMarkup(getKeyboard(ctx.scene.state.options)).catch(catchNotModified)
})

scene.action('change_bgcolor', (ctx) => {
  ctx.answerCbQuery()
  ctx.scene.state.options.bgColor = ctx.scene.state.options.bgColor === 'white' ? 'black' : 'white'
  return ctx.editMessageReplyMarkup(getKeyboard(ctx.scene.state.options)).catch(catchNotModified)
})

scene.action('done', async (ctx) => {
  const {options} = ctx.scene.state
  return ctx.editMessageText(`–û—Ç–ª–∏—á–Ω–æ!
–†–µ–∂–∏–º: ${modes.get(options.mode)}
–¶–≤–µ—Ç —Ñ–æ–Ω–∞: ${colors.get(options.bgColor)}

–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–∞—Ä—Ç–∏–Ω–∫—É`)
})

scene.on('photo', checkPendingByThisUser, async (ctx) => {
  const url = await ctx.telegram.getFileLink(ctx.message.photo[ctx.message.photo.length - 1].file_id)

  const queueLength = await Results.countDocuments({status: 0})

  await Results.create({
    user_id: ctx.from.id,
    url,
    status: 0,
    as_avatar: ctx.scene.state.options.mode === 'avatar',
    background_color: ctx.scene.state.options.bgColor,
  })

  console.log(`new result from ${ctx.from.id}`)

  await ctx.reply(getReplyTextByQueueLength(queueLength))

  return ctx.scene.leave()
})

module.exports = scene
